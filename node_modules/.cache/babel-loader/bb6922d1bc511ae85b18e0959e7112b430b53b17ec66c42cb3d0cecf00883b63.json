{"ast":null,"code":"var _jsxFileName = \"/Users/ravi/code/ga/sei/homework/react-giphy-searcher/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SearchForm from './components/SearchForm';\nimport SearchResults from './components/SearchResults';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const searchOptions = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    limit: 25,\n    rating: 'G',\n    api: 'https://api.giphy.com/v1/gifs',\n    endpoint: '/search'\n  };\n  const [lastSearch, setLastSearch] = useState('');\n  useEffect(() => {\n    // Pass the searchString to getImages\n    getImages(searchString);\n  }, []);\n\n  // This function now needs a parameter\n  function getImages(searchString) {\n    const url = `${searchOptions.api}${searchOptions.endpoint}?api_key=${searchOptions.key}&q=${searchString}&limit=${searchOptions.limit}&offset=${searchOptions.offset}&rating=${searchOptions.rating}&lang=en`;\n    fetch(url).then(response => response.json()).then(response => {\n      setImages(response.data);\n      // Set the lastSearch to the searchString value\n      setLastSearch(searchString);\n      // Set the searchString in state to an empty string\n      setSearchString('');\n    }).catch(console.error);\n  }\n  function handleChange(event) {\n    setSearchString(event.target.value);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    getImages();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Giphy Searcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      searchString: searchString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t/q8ENmq7dL5dS4r24V3UaakT5I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SearchForm","SearchResults","useEffect","useState","App","searchOptions","key","process","env","REACT_APP_GIPHY_KEY","limit","rating","api","endpoint","lastSearch","setLastSearch","getImages","searchString","url","offset","fetch","then","response","json","setImages","data","setSearchString","catch","console","error","handleChange","event","target","value","handleSubmit","preventDefault","images"],"sources":["/Users/ravi/code/ga/sei/homework/react-giphy-searcher/src/App.js"],"sourcesContent":["import React from 'react';\nimport SearchForm from './components/SearchForm';\nimport SearchResults from './components/SearchResults';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n\n\nfunction App() {\n  const searchOptions = {\n    key: process.env.REACT_APP_GIPHY_KEY,\n    limit: 25,\n    rating: 'G',\n    api: 'https://api.giphy.com/v1/gifs',\n    endpoint: '/search'\n  };\n  \n  const [lastSearch, setLastSearch] = useState('');\n\n  useEffect(() => {\n    // Pass the searchString to getImages\n    getImages(searchString);\n  }, []);\n\n  // This function now needs a parameter\n  function getImages(searchString) {\n    const url = `${searchOptions.api}${searchOptions.endpoint}?api_key=${searchOptions.key}&q=${searchString}&limit=${searchOptions.limit}&offset=${searchOptions.offset}&rating=${searchOptions.rating}&lang=en`;\n\n    fetch(url)\n      .then(response => response.json())\n      .then(response => {\n        setImages(response.data);\n        // Set the lastSearch to the searchString value\n        setLastSearch(searchString);\n        // Set the searchString in state to an empty string\n        setSearchString('');\n      })\n      .catch(console.error);\n  }\n\n\n  function handleChange(event) {\n    setSearchString(event.target.value);\n  }\n  \n  function handleSubmit(event) {\n    event.preventDefault();\n    getImages();\n  }\n  \n  return (\n    <div>\n      <h1>Giphy Searcher</h1>\n      <SearchForm\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        searchString={searchString}\n      />\n      <SearchResults images={images} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAIjC,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,aAAa,GAAG;IACpBC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,mBAAmB;IACpCC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,GAAG;IACXC,GAAG,EAAE,+BAA+B;IACpCC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACAc,SAAS,CAACC,YAAY,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASD,SAAS,CAACC,YAAY,EAAE;IAC/B,MAAMC,GAAG,GAAI,GAAEb,aAAa,CAACO,GAAI,GAAEP,aAAa,CAACQ,QAAS,YAAWR,aAAa,CAACC,GAAI,MAAKW,YAAa,UAASZ,aAAa,CAACK,KAAM,WAAUL,aAAa,CAACc,MAAO,WAAUd,aAAa,CAACM,MAAO,UAAS;IAE7MS,KAAK,CAACF,GAAG,CAAC,CACPG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MAChBE,SAAS,CAACF,QAAQ,CAACG,IAAI,CAAC;MACxB;MACAV,aAAa,CAACE,YAAY,CAAC;MAC3B;MACAS,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACzB;EAGA,SAASC,YAAY,CAACC,KAAK,EAAE;IAC3BL,eAAe,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC;EAEA,SAASC,YAAY,CAACH,KAAK,EAAE;IAC3BA,KAAK,CAACI,cAAc,EAAE;IACtBnB,SAAS,EAAE;EACb;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eACvB,QAAC,UAAU;MACT,YAAY,EAAEc,YAAa;MAC3B,YAAY,EAAEI,YAAa;MAC3B,YAAY,EAAEjB;IAAa;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF,QAAC,aAAa;MAAC,MAAM,EAAEmB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7B;AAEV;AAAC,GArDQhC,GAAG;AAAA,KAAHA,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}